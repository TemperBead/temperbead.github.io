"use strict";(self.webpackChunk_dreamcatcher_tech_dreamcatcher_website=self.webpackChunk_dreamcatcher_tech_dreamcatcher_website||[]).push([[16088],{3905:function(e,r,t){t.d(r,{Zo:function(){return v},kt:function(){return m}});var n=t(67294);function c(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){c(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,c=function(e,r){if(null==e)return{};var t,n,c={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(c[t]=e[t]);return c}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var u=n.createContext({}),l=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},v=function(e){var r=l(e.components);return n.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,c=e.mdxType,a=e.originalType,u=e.parentName,v=i(e,["components","mdxType","originalType","parentName"]),f=l(t),m=c,d=f["".concat(u,".").concat(m)]||f[m]||p[m]||a;return t?n.createElement(d,o(o({ref:r},v),{},{components:t})):n.createElement(d,o({ref:r},v))}));function m(e,r){var t=arguments,c=r&&r.mdxType;if("string"==typeof e||c){var a=t.length,o=new Array(a);o[0]=f;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i.mdxType="string"==typeof e?e:c,o[1]=i;for(var l=2;l<a;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},99643:function(e,r,t){t.r(r),t.d(r,{assets:function(){return v},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var n=t(83117),c=t(80102),a=(t(67294),t(3905)),o=["components"],i={id:"dreamcatcher-overview",title:"Dreamcatcher Overview",sidebar_label:"Overview"},u=void 0,l={unversionedId:"dreamcatcher-overview",id:"dreamcatcher-overview",title:"Dreamcatcher Overview",description:"Overview",source:"@site/docs/dreamcatcher.md",sourceDirName:".",slug:"/dreamcatcher-overview",permalink:"/docs/dreamcatcher-overview",draft:!1,editUrl:"https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/edit/master/website/docs/dreamcatcher.md",tags:[],version:"current",frontMatter:{id:"dreamcatcher-overview",title:"Dreamcatcher Overview",sidebar_label:"Overview"}},v={},p=[{value:"Overview",id:"overview",level:3}],f={toc:p};function m(e){var r=e.components,t=(0,c.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"overview"},"Overview"))}m.isMDXComponent=!0}}]);