"use strict";(self.webpackChunk_dreamcatcher_tech_dreamcatcher_website=self.webpackChunk_dreamcatcher_tech_dreamcatcher_website||[]).push([[85013],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(67294);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,c=e.mdxType,a=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),h=u(r),m=c,f=h["".concat(l,".").concat(m)]||h[m]||p[m]||a;return r?n.createElement(f,o(o({ref:t},s),{},{components:r})):n.createElement(f,o({ref:t},s))}));function m(e,t){var r=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var a=r.length,o=new Array(a);o[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:c,o[1]=i;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},54832:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var n=r(83117),c=r(80102),a=(r(67294),r(3905)),o=["components"],i={},l=void 0,u={unversionedId:"Architecture_Dictionary/Reference/Dreamcatcher Stack",id:"Architecture_Dictionary/Reference/Dreamcatcher Stack",title:"Dreamcatcher Stack",description:"The following is the stack on which Dreamcatcher is built. The lowest layers, as with ISO/OSI, are the more fundamental. Higher layers rely on layers below them.",source:"@site/interblock/Architecture_Dictionary/Reference/Dreamcatcher Stack.md",sourceDirName:"Architecture_Dictionary/Reference",slug:"/Architecture_Dictionary/Reference/Dreamcatcher Stack",permalink:"/interblock/Architecture_Dictionary/Reference/Dreamcatcher Stack",draft:!1,editUrl:"https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/edit/master/website/interblock/Architecture_Dictionary/Reference/Dreamcatcher Stack.md",tags:[],version:"current",frontMatter:{}},s={},p=[],h={toc:p};function m(e){var t=e.components,r=(0,c.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The following is the stack on which Dreamcatcher is built. The lowest layers, as with ISO/OSI, are the more fundamental. Higher layers rely on layers below them."),(0,a.kt)("blockquote",null,(0,a.kt)("h2",{parentName:"blockquote",id:"app-layer-apps---eg-timesheets"},"App Layer, Apps - e.g. Timesheets"),(0,a.kt)("h2",{parentName:"blockquote",id:"utility-objects---flowcreator-dreamcatcher-appliance-appstore"},"Utility Objects - Flowcreator, Dreamcatcher Appliance, Appstore"),(0,a.kt)("h2",{parentName:"blockquote",id:"dreamcatcher-layer---dreamcatcher"},"Dreamcatcher Layer - Dreamcatcher"),(0,a.kt)("h2",{parentName:"blockquote",id:"dos-layer---dreamcatcher-operating-system-cli"},"DOS Layer - Dreamcatcher Operating System CLI"),(0,a.kt)("h2",{parentName:"blockquote",id:"chain-layer---interblock-inversion"},"Chain Layer - Interblock, Inversion"),(0,a.kt)("h2",{parentName:"blockquote",id:"device-layer---android-ios-webdos"},"Device Layer - Android, iOS, webdos")),(0,a.kt)("p",null,"The whole stack is the Dreamcatcher Stack"))}m.isMDXComponent=!0}}]);